[[nodiscard]] auto xx_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x00, 2)); }
[[nodiscard]] auto xy_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x01, 2)); }
[[nodiscard]] auto xz_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x02, 2)); }
[[nodiscard]] auto yx_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x10, 2)); }
[[nodiscard]] auto yy_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x11, 2)); }
[[nodiscard]] auto yz_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x12, 2)); }
[[nodiscard]] auto zx_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x20, 2)); }
[[nodiscard]] auto zy_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x21, 2)); }
[[nodiscard]] auto zz_() const { return eval<Vector<T, 2>>(Function::current()->swizzle(Type::of<Vector<T, 2>>(), expression(), 0x22, 2)); }

[[nodiscard]] auto xxx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x000, 3)); }
[[nodiscard]] auto xxy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x001, 3)); }
[[nodiscard]] auto xxz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x002, 3)); }
[[nodiscard]] auto xyx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x010, 3)); }
[[nodiscard]] auto xyy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x011, 3)); }
[[nodiscard]] auto xyz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x012, 3)); }
[[nodiscard]] auto xzx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x020, 3)); }
[[nodiscard]] auto xzy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x021, 3)); }
[[nodiscard]] auto xzz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x022, 3)); }
[[nodiscard]] auto yxx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x100, 3)); }
[[nodiscard]] auto yxy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x101, 3)); }
[[nodiscard]] auto yxz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x102, 3)); }
[[nodiscard]] auto yyx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x110, 3)); }
[[nodiscard]] auto yyy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x111, 3)); }
[[nodiscard]] auto yyz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x112, 3)); }
[[nodiscard]] auto yzx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x120, 3)); }
[[nodiscard]] auto yzy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x121, 3)); }
[[nodiscard]] auto yzz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x122, 3)); }
[[nodiscard]] auto zxx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x200, 3)); }
[[nodiscard]] auto zxy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x201, 3)); }
[[nodiscard]] auto zxz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x202, 3)); }
[[nodiscard]] auto zyx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x210, 3)); }
[[nodiscard]] auto zyy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x211, 3)); }
[[nodiscard]] auto zyz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x212, 3)); }
[[nodiscard]] auto zzx_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x220, 3)); }
[[nodiscard]] auto zzy_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x221, 3)); }
[[nodiscard]] auto zzz_() const { return eval<Vector<T, 3>>(Function::current()->swizzle(Type::of<Vector<T, 3>>(), expression(), 0x222, 3)); }

[[nodiscard]] auto xxxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0000, 4)); }
[[nodiscard]] auto xxxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0001, 4)); }
[[nodiscard]] auto xxxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0002, 4)); }
[[nodiscard]] auto xxyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0010, 4)); }
[[nodiscard]] auto xxyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0011, 4)); }
[[nodiscard]] auto xxyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0012, 4)); }
[[nodiscard]] auto xxzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0020, 4)); }
[[nodiscard]] auto xxzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0021, 4)); }
[[nodiscard]] auto xxzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0022, 4)); }
[[nodiscard]] auto xyxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0100, 4)); }
[[nodiscard]] auto xyxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0101, 4)); }
[[nodiscard]] auto xyxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0102, 4)); }
[[nodiscard]] auto xyyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0110, 4)); }
[[nodiscard]] auto xyyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0111, 4)); }
[[nodiscard]] auto xyyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0112, 4)); }
[[nodiscard]] auto xyzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0120, 4)); }
[[nodiscard]] auto xyzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0121, 4)); }
[[nodiscard]] auto xyzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0122, 4)); }
[[nodiscard]] auto xzxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0200, 4)); }
[[nodiscard]] auto xzxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0201, 4)); }
[[nodiscard]] auto xzxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0202, 4)); }
[[nodiscard]] auto xzyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0210, 4)); }
[[nodiscard]] auto xzyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0211, 4)); }
[[nodiscard]] auto xzyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0212, 4)); }
[[nodiscard]] auto xzzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0220, 4)); }
[[nodiscard]] auto xzzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0221, 4)); }
[[nodiscard]] auto xzzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x0222, 4)); }
[[nodiscard]] auto yxxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1000, 4)); }
[[nodiscard]] auto yxxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1001, 4)); }
[[nodiscard]] auto yxxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1002, 4)); }
[[nodiscard]] auto yxyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1010, 4)); }
[[nodiscard]] auto yxyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1011, 4)); }
[[nodiscard]] auto yxyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1012, 4)); }
[[nodiscard]] auto yxzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1020, 4)); }
[[nodiscard]] auto yxzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1021, 4)); }
[[nodiscard]] auto yxzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1022, 4)); }
[[nodiscard]] auto yyxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1100, 4)); }
[[nodiscard]] auto yyxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1101, 4)); }
[[nodiscard]] auto yyxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1102, 4)); }
[[nodiscard]] auto yyyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1110, 4)); }
[[nodiscard]] auto yyyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1111, 4)); }
[[nodiscard]] auto yyyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1112, 4)); }
[[nodiscard]] auto yyzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1120, 4)); }
[[nodiscard]] auto yyzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1121, 4)); }
[[nodiscard]] auto yyzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1122, 4)); }
[[nodiscard]] auto yzxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1200, 4)); }
[[nodiscard]] auto yzxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1201, 4)); }
[[nodiscard]] auto yzxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1202, 4)); }
[[nodiscard]] auto yzyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1210, 4)); }
[[nodiscard]] auto yzyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1211, 4)); }
[[nodiscard]] auto yzyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1212, 4)); }
[[nodiscard]] auto yzzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1220, 4)); }
[[nodiscard]] auto yzzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1221, 4)); }
[[nodiscard]] auto yzzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x1222, 4)); }
[[nodiscard]] auto zxxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2000, 4)); }
[[nodiscard]] auto zxxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2001, 4)); }
[[nodiscard]] auto zxxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2002, 4)); }
[[nodiscard]] auto zxyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2010, 4)); }
[[nodiscard]] auto zxyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2011, 4)); }
[[nodiscard]] auto zxyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2012, 4)); }
[[nodiscard]] auto zxzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2020, 4)); }
[[nodiscard]] auto zxzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2021, 4)); }
[[nodiscard]] auto zxzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2022, 4)); }
[[nodiscard]] auto zyxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2100, 4)); }
[[nodiscard]] auto zyxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2101, 4)); }
[[nodiscard]] auto zyxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2102, 4)); }
[[nodiscard]] auto zyyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2110, 4)); }
[[nodiscard]] auto zyyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2111, 4)); }
[[nodiscard]] auto zyyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2112, 4)); }
[[nodiscard]] auto zyzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2120, 4)); }
[[nodiscard]] auto zyzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2121, 4)); }
[[nodiscard]] auto zyzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2122, 4)); }
[[nodiscard]] auto zzxx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2200, 4)); }
[[nodiscard]] auto zzxy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2201, 4)); }
[[nodiscard]] auto zzxz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2202, 4)); }
[[nodiscard]] auto zzyx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2210, 4)); }
[[nodiscard]] auto zzyy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2211, 4)); }
[[nodiscard]] auto zzyz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2212, 4)); }
[[nodiscard]] auto zzzx_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2220, 4)); }
[[nodiscard]] auto zzzy_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2221, 4)); }
[[nodiscard]] auto zzzz_() const { return eval<Vector<T, 4>>(Function::current()->swizzle(Type::of<Vector<T, 4>>(), expression(), 0x2222, 4)); }
